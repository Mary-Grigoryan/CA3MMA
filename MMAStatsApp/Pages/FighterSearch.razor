@page "/fighter-search"
@page "/fighter-search/{searchTerm}"
@inject NavigationManager NavigationManager
@inject MMAStatsService StatsService
@using MMAStatsApp.Shared

<EditForm Model="@this" OnValidSubmit="@HandleSearch">
    <InputText id="fighterSearch" class="form-control search-box" @bind-Value="searchQuery"
        placeholder="Search for Athletes" />
    <button type="submit" id="searchSubmit" class="btn btn-black search-btn">Search</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p>@errorMessage</p>
}

else if (searchResults != null && searchResults.Count > 1)
{
    // Display a list or grid of fighters matching the search term
    <div class="fighter-grid">
    @foreach (var fighter in searchResults)
        {
            <FighterCard fighter="@fighter" />
        }
    </div>
}

@code {
    private string? searchQuery;

    [Parameter]
    public string? searchTerm { get; set; }
    private List<FighterResult>? searchResults;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            // Perform the search with the searchTerm
            await PerformSearch(searchTerm);
        }
    }

    private async Task HandleSearch()
    {
        await PerformSearch(searchQuery);
    }

    private async Task PerformSearch(string? query)
    {
        errorMessage = null; // Clear previous error messages

        if (string.IsNullOrWhiteSpace(query))
        {
            errorMessage = "Please enter a search query.";
            return;
        }

        try
        {
            searchResults = await StatsService.SearchFighters(query);
            if (searchResults == null || !searchResults.Any())
            {
                errorMessage = "No results found.";
            }
            else if (searchResults.Count == 1)
            {
                // If there is exactly one result, redirect to the fighter details page
                NavigationManager.NavigateTo($"/fighter-details/{searchResults.First().Name}");
            }
            // If there are multiple results, they will be displayed by the markup above
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}